#!/usr/bin/env bash
set -euo pipefail

# setup_venv.sh - create venv inside Vulnerability_Tool_V2 and install requirements
# Usage: ./setup_venv.sh [--upgrade-pip]

ROOT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
VENV_DIR="$ROOT_DIR/venv"
REQ_FILE="$ROOT_DIR/requirements.txt"
PYTHON_CMD=python3

echo "Scanner venv setup script"

echo "Using python command: ${PYTHON_CMD}"

if ! command -v ${PYTHON_CMD} >/dev/null 2>&1; then
  echo "${PYTHON_CMD} not found in PATH. Please install Python 3.8+ and retry." >&2
  exit 2
fi

if [ ! -f "$REQ_FILE" ]; then
  echo "Requirements file not found at $REQ_FILE" >&2
  exit 2
fi

if [ -d "$VENV_DIR" ]; then
  echo "Virtualenv already exists at $VENV_DIR"
  echo "To recreate, remove the directory and run this script again: rm -rf $VENV_DIR"
else
  echo "Creating virtualenv at $VENV_DIR"
  ${PYTHON_CMD} -m venv "$VENV_DIR"
fi

# Activate and install
# shellcheck disable=SC1091
source "$VENV_DIR/bin/activate"

if [ "${1-}" = "--upgrade-pip" ]; then
  echo "Upgrading pip..."
  pip install --upgrade pip
fi

echo "Installing Python dependencies from $REQ_FILE"
pip install -r "$REQ_FILE"

echo "Done. To activate the venv in your session:"
echo "  source $VENV_DIR/bin/activate"
echo "Then you can run the scanner directly, for example:"
echo "  python $ROOT_DIR/scanner_v2.py --target ../ --format json"

exit 0
