import os
import sys
from pathlib import Path

# Ensure the package root (Vulnerability_Tool_V2) is on sys.path so `plugins` is importable
sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))

from plugins.general_security import GeneralSecurityPlugin


def make_sample_file(tmp_path, content, name='sample.js'):
    p = tmp_path / name
    p.write_text(content, encoding='utf-8')
    return str(p)


def test_hardcoded_secret_detection(tmp_path):
    content = """
    const JWT_SECRET = "supersecret123";
    """
    f = make_sample_file(tmp_path, content, 'secret.js')
    plugin = GeneralSecurityPlugin()
    findings = plugin.scan(str(tmp_path))
    assert any('Hardcoded secret' in f.title for f in findings)


def test_db_connection_detection(tmp_path):
    content = "db_url = 'postgres://user:pass@localhost:5432/dbname'"
    f = make_sample_file(tmp_path, content, 'db.conf')
    plugin = GeneralSecurityPlugin()
    findings = plugin.scan(str(tmp_path))
    assert any('DB connection' in f.title or 'DB connection' in f.description or 'connection string' in f.description for f in findings)
